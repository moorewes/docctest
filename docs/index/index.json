{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/dynamickeyvaluepair\/init(key:valueblock:)","title":"init(key: String, valueBlock: (NetworkRequestContext) -> String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/dynamickeyvaluepair\/value","title":"var value: String?","type":"property"}],"path":"\/documentation\/fonetworking\/dynamickeyvaluepair","title":"DynamicKeyValuePair","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/keyvaluepair\/==(_:_:)","title":"static func == (KeyValuePair, KeyValuePair) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/keyvaluepair\/init(key:value:)","title":"init(key: String, value: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/keyvaluepair\/key","title":"let key: String","type":"property"},{"path":"\/documentation\/fonetworking\/keyvaluepair\/value","title":"var value: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/keyvaluepair\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/keyvaluepair\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fonetworking\/keyvaluepair\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fonetworking\/keyvaluepair","title":"KeyValuePair","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequester\/init(networkrequestersetup:)","title":"init(networkRequesterSetup: NetworkRequesterSetup?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequester\/eventpublisher","title":"var eventPublisher: AnyPublisher<NetworkRequesterEvent, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequester\/performrequest(_:)","title":"func performRequest(NetworkRequest) async throws -> NetworkRequesterResult","type":"method"},{"path":"\/documentation\/fonetworking\/networkrequester\/performrequest(_:completion:)","title":"func performRequest(NetworkRequest, completion: (Result<NetworkRequesterResult, Error>) -> Void)","type":"method"}],"path":"\/documentation\/fonetworking\/networkrequester","title":"NetworkRequester","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkcallinfo\/enddate","title":"let endDate: Date","type":"property"},{"path":"\/documentation\/fonetworking\/networkcallinfo\/request","title":"let request: NetworkCallRequest","type":"property"},{"path":"\/documentation\/fonetworking\/networkcallinfo\/response","title":"let response: NetworkCallResponse","type":"property"},{"path":"\/documentation\/fonetworking\/networkcallinfo\/startdate","title":"let startDate: Date","type":"property"}],"path":"\/documentation\/fonetworking\/networkcallinfo","title":"NetworkCallInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkcallrequest\/headers","title":"let headers: [String : String]","type":"property"},{"path":"\/documentation\/fonetworking\/networkcallrequest\/method","title":"let method: String","type":"property"},{"path":"\/documentation\/fonetworking\/networkcallrequest\/payload","title":"let payload: Data?","type":"property"},{"path":"\/documentation\/fonetworking\/networkcallrequest\/url","title":"let url: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkcallrequest\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fonetworking\/networkcallrequest\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/fonetworking\/networkcallrequest","title":"NetworkCallRequest","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkcallresponse\/body","title":"let body: Data?","type":"property"},{"path":"\/documentation\/fonetworking\/networkcallresponse\/headers","title":"let headers: [String : String]","type":"property"},{"path":"\/documentation\/fonetworking\/networkcallresponse\/statuscode","title":"let statusCode: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkcallresponse\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/fonetworking\/networkcallresponse\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/fonetworking\/networkcallresponse","title":"NetworkCallResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequest\/init(method:baseurl:relativepath:pathcomponents:headers:queryparameters:payload:contenttype:)","title":"init(method: NetworkRequestMethod, baseUrl: URL?, relativePath: String?, pathComponents: [String], headers: Set<KeyValuePair>, queryParameters: Set<KeyValuePair>, payload: Data?, contentType: ContentType?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequest\/baseurl","title":"var baseUrl: URL?","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequest\/contenttype","title":"var contentType: ContentType?","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequest\/headers","title":"var headers: Set<KeyValuePair>","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequest\/method","title":"var method: NetworkRequestMethod","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequest\/pathcomponents","title":"var pathComponents: [String]","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequest\/payload","title":"var payload: Data?","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequest\/queryparameters","title":"var queryParameters: Set<KeyValuePair>","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequest\/relativepath","title":"var relativePath: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequest\/addencodablepayload(_:)","title":"func addEncodablePayload<PayloadType>(PayloadType)","type":"method"}],"path":"\/documentation\/fonetworking\/networkrequest","title":"NetworkRequest","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequestcontext\/currentrequestnumber","title":"var currentRequestNumber: Int","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequestcontext\/previousnetworkcalls","title":"var previousNetworkCalls: [NetworkCallInfo]","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequestcontext\/requestid","title":"let requestId: String","type":"property"}],"path":"\/documentation\/fonetworking\/networkrequestcontext","title":"NetworkRequestContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequesterresult\/allperformedcalls","title":"var allPerformedCalls: [NetworkCallInfo]","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequesterresult\/finalcall","title":"let finalCall: NetworkCallInfo","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequesterresult\/previousperformedcalls","title":"let previousPerformedCalls: [NetworkCallInfo]","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequesterresult\/requestid","title":"let requestId: String","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequesterresult\/response","title":"var response: NetworkCallResponse","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequesterresult\/totalcalls","title":"var totalCalls: Int","type":"property"}],"path":"\/documentation\/fonetworking\/networkrequesterresult","title":"NetworkRequesterResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequestersetup\/init(configuration:retryscenarios:requestadapter:defaultpreretrylogic:retrybackoff:eventhandler:defaultcontenttype:)","title":"init(configuration: URLSessionConfiguration, retryScenarios: [RequestRetryScenario], requestAdapter: RequestAdapter?, defaultPreRetryLogic: PreRetryLogic?, retryBackoff: ((Int) -> Double)?, eventHandler: ((NetworkRequesterEvent) -> Void)?, defaultContentType: ContentType)","type":"init"}],"path":"\/documentation\/fonetworking\/networkrequestersetup","title":"NetworkRequesterSetup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/preretrylogic\/init(preretrylogic:)-45398","title":"init(preRetryLogic: PreRetryLogicWithAsyncAwait)","type":"init"},{"path":"\/documentation\/fonetworking\/preretrylogic\/init(preretrylogic:)-970vk","title":"init(preRetryLogic: PreRetryLogicWithCompletionBlock)","type":"init"}],"path":"\/documentation\/fonetworking\/preretrylogic","title":"PreRetryLogic","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/requestadapter\/init(requestadapter:)-2fdee","title":"init(requestAdapter: RequestAdapterWithCompletionBlock)","type":"init"},{"path":"\/documentation\/fonetworking\/requestadapter\/init(requestadapter:)-5wavy","title":"init(requestAdapter: RequestAdapterWithAsyncAwait)","type":"init"}],"path":"\/documentation\/fonetworking\/requestadapter","title":"RequestAdapter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/requestretrycondition\/init(conditionlogic:)","title":"init(conditionLogic: (NetworkCallResponse) -> Bool)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/requestretrycondition\/always","title":"static var always: RequestRetryCondition","type":"property"},{"path":"\/documentation\/fonetworking\/requestretrycondition\/never","title":"static var never: RequestRetryCondition","type":"property"}],"path":"\/documentation\/fonetworking\/requestretrycondition","title":"RequestRetryCondition","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/requestretryscenario\/==(_:_:)","title":"static func == (RequestRetryScenario, RequestRetryScenario) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/requestretryscenario\/init(description:priority:preretrylogicselection:maxretries:custompreretrylogic:condition:)","title":"init(description: String, priority: Priority, preRetryLogicSelection: PreRetryLogicSelection, maxRetries: Int, customPreRetryLogic: PreRetryLogic?, condition: RequestRetryCondition)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/requestretryscenario\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/fonetworking\/requestretryscenario\/priority","title":"let priority: Priority","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/requestretryscenario\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/requestretryscenario\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fonetworking\/requestretryscenario\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fonetworking\/requestretryscenario","title":"RequestRetryScenario","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/typednetworkresponse\/init(from:expectedstatuscode:)","title":"init(from: NetworkCallResponse, expectedStatusCode: Int?)","type":"init"},{"path":"\/documentation\/fonetworking\/typednetworkresponse\/init(from:expectedstatuscodes:)","title":"init(from: NetworkCallResponse, expectedStatusCodes: [Int])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/typednetworkresponse\/astypedresponse()","title":"func asTypedResponse() throws -> Type","type":"method"},{"path":"\/documentation\/fonetworking\/typednetworkresponse\/expectingstatuscode(_:)","title":"func expectingStatusCode(Int)","type":"method"},{"path":"\/documentation\/fonetworking\/typednetworkresponse\/expectingstatuscodes(_:)","title":"func expectingStatusCodes([Int])","type":"method"}],"path":"\/documentation\/fonetworking\/typednetworkresponse","title":"TypedNetworkResponse","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/notificationcenter","title":"let notificationCenter: NotificationCenter","type":"var"},{"path":"\/documentation\/fonetworking\/shouldpostnclogs","title":"var shouldPostNCLogs: Bool","type":"var"},{"path":"\/documentation\/fonetworking\/shouldwriteoslogs","title":"var shouldWriteOSLogs: Bool","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/dynamicnetworkheader","title":"DynamicNetworkHeader","type":"typealias"},{"path":"\/documentation\/fonetworking\/dynamicnetworkqueryparameter","title":"DynamicNetworkQueryParameter","type":"typealias"},{"path":"\/documentation\/fonetworking\/networkheader","title":"NetworkHeader","type":"typealias"},{"path":"\/documentation\/fonetworking\/networkqueryparameter","title":"NetworkQueryParameter","type":"typealias"},{"path":"\/documentation\/fonetworking\/preretrylogicwithasyncawait","title":"PreRetryLogicWithAsyncAwait","type":"typealias"},{"path":"\/documentation\/fonetworking\/preretrylogicwithcompletionblock","title":"PreRetryLogicWithCompletionBlock","type":"typealias"},{"path":"\/documentation\/fonetworking\/requestadapterwithasyncawait","title":"RequestAdapterWithAsyncAwait","type":"typealias"},{"path":"\/documentation\/fonetworking\/requestadapterwithcompletionblock","title":"RequestAdapterWithCompletionBlock","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/contenttype\/custom(value:)","title":"case custom(value: String)","type":"case"},{"path":"\/documentation\/fonetworking\/contenttype\/json","title":"case json","type":"case"},{"path":"\/documentation\/fonetworking\/contenttype\/none","title":"case none","type":"case"}],"path":"\/documentation\/fonetworking\/contenttype","title":"ContentType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequestmethod\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequestmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequestmethod\/post","title":"case post","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequestmethod\/put","title":"case put","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequestmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fonetworking\/networkrequestmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fonetworking\/networkrequestmethod","title":"NetworkRequestMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/custompreretrylogicselectedbutnonedefined(scenariodescription:)","title":"case customPreRetryLogicSelectedButNoneDefined(scenarioDescription: String)","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/failedtoadaptrequest(requestadaptererror:)","title":"case failedToAdaptRequest(requestAdapterError: Error)","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/failedtobuildrequest(details:)","title":"case failedToBuildRequest(details: String)","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/failedtoencodepayload(error:)","title":"case failedToEncodePayload(error: Error)","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/miscellaneous(details:)","title":"case miscellaneous(details: String)","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/networkcallfailed(details:)","title":"case networkCallFailed(details: String)","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/preretrylogicfailed(preretrylogicerror:)","title":"case preRetryLogicFailed(preRetryLogicError: Error)","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/samepriorityretryscenarios(scenario1description:scenario2description:)","title":"case samePriorityRetryScenarios(scenario1Description: String, scenario2Description: String)","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/unexpectednetworkresponsetype(details:)","title":"case unexpectedNetworkResponseType(details: String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/errordescription-kbt6","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/fonetworking\/networkrequestererror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/errordescription-40y6w","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/fonetworking\/networkrequestererror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/fonetworking\/networkrequestererror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/fonetworking\/networkrequestererror","title":"NetworkRequesterError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/networkrequesterevent\/backgroundsessiondidfinishevents(backgroundsession:)","title":"case backgroundSessionDidFinishEvents(backgroundSession: URLSession)","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequesterevent\/sessiondidbecomeinvalid(session:error:)","title":"case sessionDidBecomeInvalid(session: URLSession, error: Error?)","type":"case"},{"path":"\/documentation\/fonetworking\/networkrequesterevent\/sessiondidreceivechallenge(session:challenge:completechallengeclosure:)","title":"case sessionDidReceiveChallenge(session: URLSession, challenge: URLAuthenticationChallenge, completeChallengeClosure: (URLSession.AuthChallengeDisposition, URLCredential?) -> Void)","type":"case"}],"path":"\/documentation\/fonetworking\/networkrequesterevent","title":"NetworkRequesterEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/preretrylogicselection\/custom","title":"case custom","type":"case"},{"path":"\/documentation\/fonetworking\/preretrylogicselection\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/fonetworking\/preretrylogicselection\/none","title":"case none","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/preretrylogicselection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fonetworking\/preretrylogicselection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/fonetworking\/preretrylogicselection","title":"PreRetryLogicSelection","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/priority\/==(_:_:)","title":"static func == (Priority, Priority) -> Bool","type":"op"},{"path":"\/documentation\/fonetworking\/priority\/_(_:_:)-1pclm","title":"static func < (Priority, Priority) -> Bool","type":"op"},{"path":"\/documentation\/fonetworking\/priority\/_(_:_:)-5oxxr","title":"static func > (Priority, Priority) -> Bool","type":"op"},{"path":"\/documentation\/fonetworking\/priority\/_=(_:_:)-3qdee","title":"static func >= (Priority, Priority) -> Bool","type":"op"},{"path":"\/documentation\/fonetworking\/priority\/_=(_:_:)-55gy1","title":"static func <= (Priority, Priority) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/priority\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/fonetworking\/priority\/high","title":"case high","type":"case"},{"path":"\/documentation\/fonetworking\/priority\/low","title":"case low","type":"case"},{"path":"\/documentation\/fonetworking\/priority\/veryhigh","title":"case veryHigh","type":"case"},{"path":"\/documentation\/fonetworking\/priority\/verylow","title":"case veryLow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/priority\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/priority\/'...(_:)-1sbr4","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/fonetworking\/priority\/'...(_:)-6fy00","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/fonetworking\/priority\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/fonetworking\/priority\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/fonetworking\/priority\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/fonetworking\/priority\/_(_:_:)-99ufm","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fonetworking\/priority\/_=(_:_:)-4lj4t","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/fonetworking\/priority\/_=(_:_:)-9y2l9","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fonetworking\/priority\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/priority\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fonetworking\/priority\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/priority\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/priority\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fonetworking\/priority\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fonetworking\/priority","title":"Priority","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/typednetworkresponseerror\/failedtodecodedatatospecifiedtype(type:details:)","title":"case failedToDecodeDataToSpecifiedType(type: Any, details: String)","type":"case"},{"path":"\/documentation\/fonetworking\/typednetworkresponseerror\/nodatainresponse","title":"case noDataInResponse","type":"case"},{"path":"\/documentation\/fonetworking\/typednetworkresponseerror\/unexpectedstatuscode(statuscode:)","title":"case unexpectedStatusCode(statusCode: Int)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/typednetworkresponseerror\/errordescription-4aj4s","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/typednetworkresponseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/fonetworking\/typednetworkresponseerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fonetworking\/typednetworkresponseerror\/errordescription-nmtl","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/fonetworking\/typednetworkresponseerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/fonetworking\/typednetworkresponseerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/fonetworking\/typednetworkresponseerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/fonetworking\/typednetworkresponseerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/fonetworking\/typednetworkresponseerror","title":"TypedNetworkResponseError","type":"enum"}],"path":"\/documentation\/fonetworking","title":"FONetworking","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}